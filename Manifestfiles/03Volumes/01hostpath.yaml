apiVersion: apps/v1
kind: Deployment
metadata:
  name: springdep
  namespace: test-ns
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spring
  template:
    metadata:
      name: springpod
      labels:
        app: spring
    spec:
      containers:
      - name: springcont
        image: dockerhandson/spring-boot-mongo:1
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongosvc
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb@123
---
apiVersion: v1
kind: Service
metadata:
  name: springsvc
  namespace: test-ns
spec:
  type: NodePort
  selector:
    app: spring
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodbreplica
  namespace: test-ns
spec:
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      name: mongopod
      labels:
        app: mongo
    spec:
      volumes: 
      - name: mongohostvol
        hostPath: 
          path: /mongodata
      containers:
      - name: mongodbcont
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name:  MONGO_INITDB_ROOT_PASSWORD
          value: devdb@123
        volumeMounts:
        - name: mongohostvol
          mountPath: /data/db 
---
apiVersion: v1 
kind: Service
metadata:  
  name: mongosvc
  namespace: test-ns
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017